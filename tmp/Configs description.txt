
code, name, desc, link, from, to
    Ім'я конфігу

apostrophesSingleKeyDict
otherLanguagesLettersDict
specSymbolsDict

hasVowelBeModifiedInsteadOfConsonantWhenSofting

    Якщо true - то пом'якшувальна голосна пом'якшує попередній приголосний без його зміни (тю = tu̇). 
    Якщо false – пом'якшувальна голосна пом'якшує попередній приголосний з його зміною, 
    а сама перетворюється на звичайну голосну (тю = ťu)

useLocationInWordAlgo

    Якщо true – в цих налаштуваннях можливі конфігурації для заміни в конкретній частині слова 
    (масив [на початку, всередині, вкінці] замість одного значення). Якщо це ненеобхідно,
    краще поставити в false для кращої продуктивності.

beforeStartDict

    Ці заміни виконаються на самісінькому початку.
    (поруч потрібно вказати символ без діакритики, якщо вона є в першому значенні, 
    але якщо зміна бездіакритичного варіанту на самому початку не потрібна 
    - просто залишити незмінене значення, далі все виправиться з загального словника)
    Єдиний словник, який примуусово не робитимуть бездіакритичними задані значення у другому стовпчику

dict

    Словник основної транслітерації.
    Зазначати лише маленькі літери. Великі - лише якщо вони не утворюються з маленьких аналогів напряму.
    (поруч потрібно вказати символ без діакритики, якщо вона є в першому значенні)

softingSignsMultiDict

    Тут перераховані букви, які завжди пом'якшують попередню приголосну, 
    незалежно від hasVowelBeModifiedInsteadOfConsonantWhenSofting (за винятком сполучення ьо, яке діє так само як я, ю чи є при пом'якшенні).

softingVowelsMultiDict

    Тут перераховані букви, які пом'якшують попередню приголосну. 
    Я поки визначив для себе такий правопис: якщо приголосна може мати м'який звук - 
    вона переходить у відповідник з softed_dict.txt, а пом'якшувальна 
    (зазвичай двозвучна) буква - у однозвучну (другий стовпчик softing_dict.txt). 
    Наприклад, зять = źať. Якщо ж ні (використовується алофон твердої фонеми) - 
    тоді береться варіант з третього стовпчика softing_dict.txt (у моєму випадку 
    буква j змінюється на i, яка позначає зм'якшення попереднього приголосного). 
    Наприклад, кювет = kiuvet.
    (поруч потрібно вказати символ без діакритики, якщо вона є в першому значенні)

(...softingVowelsMultiDict)

    Тут лише пом'якшувальні голосні букви, які мають перетворюються за цим словником тоді, 
    коли пом'якшується приголосна, яка не має м'якого звуку ("кювет"). Цей словник
    має відповідати попередньому за ключами, просто інші значення.
    Якщо hasVowelBeModifiedInsteadOfConsonantWhenSofting = true, залишити просто пустим.

softableConsonantsDict

    Тут перераховані приголосні, які мають м'які звуки і їхній латинський м'який відповідник 
    (поруч потрібно вказати символ без діакритики, якщо вона є в першому значенні)

unsoftableConsonants

    Тут перераховані приголосні, які питомо для української мови не мають м'яких звуків
    - для них вводиться поняття фонеми периферійної підсистеми, а в основній системі вони 
    зараз класифікуються як алофони відповідних твердих фонем (http://goo.gl/pnybDn)

afterFinishDict

    Ці заміни виконаються в самісінькому кінці і виправлять те, 
    що прямо налаштувати не вдастся:
    (поруч потрібно вказати символ без діакритики, якщо вона є в першому значенні)


substitutionForUndefinedResult
