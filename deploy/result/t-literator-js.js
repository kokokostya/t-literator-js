const T_LITERATOR_CONFIGS={abecadlo:{code:"abecadlo",name:"Абецадло",year:1835,author:"Йосип Лозинський",desc:"Проєкт української (руської) латинської абетки, розроблений українським греко-католицьким священиком Йосипом Лозинським на основі польського алфавіту (абецадла). Вперше опублікований у Львові 1834 року. Спрощена версія, без особливостей етимологічного характеру з особливим вживанням é, ł, ó та ін. (наприклад, opysał замість opysaw, świato замість swiato, чи Ukraina замість Ukrajina). Також додане використання дієрезисів (ä, ë, ö, ü) для роздільного читання двох літер, які позначають голосні звуки (наприклад, Уляна – Uliana, але ліана – liäna).",link:"https://uk.wikipedia.org/wiki/%D0%90%D0%B1%D0%B5%D1%86%D0%B0%D0%B4%D0%BB%D0%BE",from:"ukr",to:"lat",useLocationInWordAlgo:!0,affectVowelNotConsonantWhenSofting:!0,beforeStartDict:{"іа":["ia","iä","iä"],"іе":["ie","ië","ië"],"іо":["io","iö","iö"],"іу":["iu","iü","iü"]},dict:{"и":"y","і":"i","й":"j","я":"ja","є":"je","ї":["ji","ji","ji"],"ю":"ju","ґ":"g","г":"h","х":"ch","ц":"c","щ":"szcz","ж":"ż","ш":"sz","ч":"cz","а":"a","е":"e","о":"o","у":"u","б":"b","п":"p","д":"d","т":"t","к":"k","в":"w","ф":"f","з":"z","с":"s","л":"ł","м":"m","н":"n","р":"r"},apostrophesSingleKeyDict:{"'`‘’":""},softingSignsMultiDict:{"ь":{affecting:"",affected:""}},softingVowelsMultiDict:{"є":"ie","ю":"iu","я":"ia","ьо":"io"},softableConsonantsDict:{"д":"ď","з":"ź","л":"l","н":"ń","р":"ŕ","с":"ś","т":"ť","ц":"ć"},unsoftableConsonants:["б","в","г","ґ","ж","к","м","п","ф","х","ч","ш","щ"],afterFinishDict:{"łia":"la","łiu":"lu","łie":"le","łio":"lo","łIa":"la","łIu":"lu","łIe":"le","łIo":"lo","łi":"li","łl":"ll"},substitutionForUndefinedResult:"",sortByMe:"1835Абецадлоabecadlo",isEssential:!0,isNotEssential_Unconventional:!1,isNotEssential_Fun:!1,isNotEssential_Minor:!1},jireckivka:{code:"jireckivka",name:"Їречківка",year:1859,author:"Йосиф Їречек",desc:"Проєкт латинської абетки для української (руської) мови, укладений Йосифом Їречеком на основі чеського правопису. «Пропозиція» Їречека опублікована 1859 року. Спрощена версія, без діялектичних ě, ü, ł, eu та ou.",link:"http://latynka.tak.today/works/proekt-jirecheka/","source-link":"https://books.google.com.ua/books?hl=uk&id=KU1dAAAAcAAJ&q=ll#v=onepage&q&f=false",from:"ukr",to:"lat",affectVowelNotConsonantWhenSofting:!1,beforeStartDict:{},dict:{"и":"y","і":"i","й":"j","я":"ja","є":"je","ї":"ji","ю":"ju","ґ":"g","г":"h","х":"ch","ц":"c","щ":"šč","ж":"ž","ш":"š","ч":"č","а":"a","е":"e","о":"o","у":"u","б":"b","п":"p","д":"d","т":"t","к":"k","в":"v","ф":"f","з":"z","с":"s","л":"l","м":"m","н":"n","р":"r"},apostrophesSingleKeyDict:{"'`‘’":""},softingSignsMultiDict:{"ь":{affecting:"",affected:""}},softingVowelsMultiDict:{"є":{affecting:"e",affected:"je"},"ю":{affecting:"u",affected:"ju"},"я":{affecting:"a",affected:"ja"},"ьо":{affecting:"o",affected:"jo"}},softableConsonantsDict:{"д":"ď","з":"ź","л":"ľ","н":"ń","р":"ŕ","с":"ś","т":"ť","ц":"ć"},unsoftableConsonants:["б","в","г","ґ","ж","к","м","п","ф","х","ч","ш","щ"],afterFinishDict:{},substitutionForUndefinedResult:"",sortByMe:"1859Їречківкаjireckivka",isEssential:!0,isNotEssential_Unconventional:!1,isNotEssential_Fun:!1,isNotEssential_Minor:!1},"naukova-trad":{code:"naukova-trad",name:"Наукова (традиційна)",year:1898,author:null,desc:"В 1899 році в Берліні було видано «Інструкції для алфавітних каталогів прусських бібліотек і прусського загального каталогу» (відомі як «Прусські інструкції» – Preußische Instruktionen), в яких було запропоновано спосіб транслітерації кирилиці (оскільки книги, надруковані кирилицею, треба було хоч якось класифіковувати і заносити до каталогів).",link:"http://latynka.tak.today/works/naukovyj-trad/",from:"ukr",to:"lat",useLocationInWordAlgo:!1,beforeStartDict:{},dict:{"и":"y","і":"i","й":"j","я":"ja","є":"je","ї":"ji","ю":"ju","ґ":"g","г":"h","х":"x","ц":"c","щ":"šč","ж":"ž","ш":"š","ч":"č","ь":"ʹ","а":"a","е":"e","о":"o","у":"u","б":"b","п":"p","д":"d","т":"t","к":"k","в":"v","ф":"f","з":"z","с":"s","л":"l","м":"m","н":"n","р":"r"},apostrophesSingleKeyDict:{"'`‘’":""},substitutionForUndefinedResult:"",sortByMe:"1898Наукова (традиційна)naukova-trad",isEssential:!0,isNotEssential_Unconventional:!1,isNotEssential_Fun:!1,isNotEssential_Minor:!1},"bgn-pcgn-65":{code:"bgn-pcgn-65",name:"BGN/PCGN",year:1965,author:"BGN/PCGN",desc:"Стандарт транслітерації, затверджений Палатою США з географічних назв (BGN) та Постійним комітетом з географічних назв Великої Британії (PCGN). Протягом довгих років використовувалась Організацією Об'єднаних Націй. Наразі ця версія застаріла, її [оновили](https://geonames.nga.mil/gns/html/Romanization/ROMANIZATION%20OF%20UKRAINIAN.pdf) у 2019-му році, взявши за стандарт [транслітерацію](https://latynka.xyz/?l=pasport), офіційно затверджену українським Кабміном.",link:"http://latynka.tak.today/works/bgnpcgn-1965/","source-link":"https://geonames.nga.mil/gns/html/Romanization/Romanization_Ukrainian.pdf",from:"ukr",to:"lat",beforeStartDict:{"зг":"z·h","кг":"k·h","сг":"s·h","тс":"t·s","цг":"ts·h"},dict:{"и":"y","і":"i","й":"y","я":"ya","є":"ye","ї":"yi","ю":"yu","ґ":"g","г":"h","х":"kh","ц":"ts","щ":"shch","ж":"zh","ш":"sh","ч":"ch","ь":"'","а":"a","е":"e","о":"o","у":"u","б":"b","п":"p","д":"d","т":"t","к":"k","в":"v","ф":"f","з":"z","с":"s","л":"l","м":"m","н":"n","р":"r"},apostrophesSingleKeyDict:{"'`‘’":'"'},substitutionForUndefinedResult:"",sortByMe:"1965BGN/PCGNbgn-pcgn-65",isEssential:!0,isNotEssential_Unconventional:!1,isNotEssential_Fun:!1,isNotEssential_Minor:!1},"volapuk-askii":{code:"volapuk-askii",name:"Смішне SMS",year:1990,author:"Вадим Антонов",desc:"Транслітерація в дусі перших спроб наших любих бабусь та дідусів написати «есемеску» на телефоні, що не підтримує кирилицю. Власне, це кодування «Воляпюк» з використанням лише літер/символів з таблиці ASCII.",from:"ukr",to:"lat",beforeStartDict:{},dict:{"а":"a","б":"6","в":"B","г":"r","Г":"F","ґ":"r'","Ґ":"r'","д":"g","Д":"D","е":"e","є":"{","ж":"}I{","з":"3","и":"u","И":"N","і":"i","ї":"i`","й":"u`","Й":"N`","к":"k","л":"Jl","м":"M","н":"H","о":"o","п":"n","П":"TT","р":"p","с":"c","т":"m","Т":"T","у":"y","ф":"qp","Ф":"(|)","х":"x","ц":"u,","ч":"4","ш":"w","щ":"w,","ь":"b","Ь":"b","ю":"IO","я":"R"},apostrophesSingleKeyDict:{"'`‘’":"'"},substitutionForUndefinedResult:"",sortByMe:"1990Смішне SMSvolapuk-askii",isEssential:!1,isNotEssential_Unconventional:!0,isNotEssential_Fun:!1,isNotEssential_Minor:!1},heohraf:{code:"heohraf",name:"Географічна",year:1996,author:"УКППТ",desc:"Транслітерація згідно з нормативною таблицею для відтворення українських власних назв засобами англійської мови у законодавчих та офіційних актах, затвердженою Українською комісією з питань правничої термінології у 1996-му році.",link:"https://uk.wikipedia.org/wiki/%D0%9B%D0%B0%D1%82%D0%B8%D0%BD%D1%96%D0%B7%D0%B0%D1%86%D1%96%D1%8F_%D1%83%D0%BA%D1%80%D0%B0%D1%97%D0%BD%D1%81%D1%8C%D0%BA%D0%BE%D1%97_%D0%BC%D0%BE%D0%B2%D0%B8",from:"ukr",to:"lat",useLocationInWordAlgo:!0,beforeStartDict:{"зг":"zgh"},dict:{"и":"y","і":"i","й":["y","i","i"],"я":["ya","ia","ia"],"є":["ye","ie","ie"],"ї":["yi","i","i"],"ю":["yu","iu","iu"],"ґ":"g","г":"h","х":"kh","ц":"ts","щ":"sch","ж":"zh","ш":"sh","ч":"ch","ь":"'","а":"a","е":"e","о":"o","у":"u","б":"b","п":"p","д":"d","т":"t","к":"k","в":"v","ф":"f","з":"z","с":"s","л":"l","м":"m","н":"n","р":"r"},apostrophesSingleKeyDict:{"":""},substitutionForUndefinedResult:"",sortByMe:"1996Географічнаheohraf",isEssential:!0,isNotEssential_Unconventional:!1,isNotEssential_Fun:!1,isNotEssential_Minor:!1},lucukivka:{code:"lucukivka",name:"Лучуківка",year:2e3,author:"Іван Лучук",desc:"Проєкт українського латинського правопису Івана Лучука, що вийшов у 2000-му році («Ukrajinśka latynka. Korotkyj pravopys»). За основу абетки взято «їречківку», але замість ch в «лучуківці» вживається x. Правопис Лучука використовується часописом «Ї»",link:"https://zaxid.net/ukrayinska_latinka_n1429706","source-link":"https://drive.google.com/file/d/1ucN7HVuVUFUJHZ8H1iymu8hSb35zzYgm/view",from:"ukr",to:"lat",affectVowelNotConsonantWhenSofting:!1,beforeStartDict:{},dict:{"и":"y","і":"i","й":"j","я":"ja","є":"je","ї":"ji","ю":"ju","ґ":"g","г":"h","х":"x","ц":"c","щ":"šč","ж":"ž","ш":"š","ч":"č","а":"a","е":"e","о":"o","у":"u","б":"b","п":"p","д":"d","т":"t","к":"k","в":"v","ф":"f","з":"z","с":"s","л":"l","м":"m","н":"n","р":"r"},apostrophesSingleKeyDict:{"'`‘’":""},softingSignsMultiDict:{"ь":{affecting:"",affected:""}},softingVowelsMultiDict:{"є":{affecting:"e",affected:"je"},"ю":{affecting:"u",affected:"ju"},"я":{affecting:"a",affected:"ja"},"ьо":{affecting:"o",affected:"jo"}},softableConsonantsDict:{"д":"ď","з":"ź","л":"ľ","н":"ń","р":"ŕ","с":"ś","т":"ť","ц":"ć"},unsoftableConsonants:["б","в","г","ґ","ж","к","м","п","ф","х","ч","ш","щ"],substitutionForUndefinedResult:"",sortByMe:"2000Лучуківкаlucukivka",isEssential:!0,isNotEssential_Unconventional:!1,isNotEssential_Fun:!1,isNotEssential_Minor:!1},pingvinivka:{code:"pingvinivka",name:"Пінґвінівка",year:2007,author:"Полярний Птах (з LiveJournal)",desc:"Варіант української латинки від [Полярного Птаха](https://web.archive.org/web/20190917183140/https://polar-bird.livejournal.com/profile), де для простоти засвоєння кожній літері кирилічної абетки відповідає літера латинки.",link:"https://web.archive.org/web/20190917183123/https://polar-bird.livejournal.com/220554.html",from:"ukr",to:"lat",dict:{"а":"a","б":"b","в":"v","г":"h","ґ":"g","д":"d","е":"e","є":"ë","ж":"ž","з":"z","и":"y","і":"i","ї":"ï","й":"j","к":"k","л":"l","м":"m","н":"n","о":"o","п":"p","р":"r","с":"s","т":"t","у":"u","ф":"f","х":"x","ц":"c","ч":"č","ш":"š","щ":"ş","ь":"q","ю":"ü","я":"ä"},otherLanguagesLettersDict:{"ё":"ö","ѕ":"dz","џ":"dž","ў":"ŭ","э":"ê","ы":"ŷ","ъ":"ô"},apostrophesSingleKeyDict:{"":""},substitutionForUndefinedResult:"",sortByMe:"2007Пінґвінівкаpingvinivka",isEssential:!0,isNotEssential_Unconventional:!1,isNotEssential_Fun:!1,isNotEssential_Minor:!1},pasport:{code:"pasport",name:"Паспортна",year:2010,author:"Кабінет Міністрів України",desc:"Офіційна транслітерація, затверджена Кабміном у 2010-му році. Спонукала Палату США з географічних назв (BGN) та Постійний комітет з географічних назв Великої Британії (PCGN) оновити свій власний стандарт [1965 року](https://latynka.xyz/?l=bgn-pcgn-65)) згідно з затвердженою КМУ транслітерацією.",link:"https://zakon.rada.gov.ua/laws/show/55-2010-%D0%BF#Text",from:"ukr",to:"lat",useLocationInWordAlgo:!0,beforeStartDict:{"зг":"zgh"},dict:{"и":"y","і":"i","й":["y","i","i"],"я":["ya","ia","ia"],"є":["ye","ie","ie"],"ї":["yi","i","i"],"ю":["yu","iu","iu"],"ґ":"g","г":"h","х":"kh","ц":"ts","щ":"shch","ж":"zh","ш":"sh","ч":"ch","ь":"","а":"a","е":"e","о":"o","у":"u","б":"b","п":"p","д":"d","т":"t","к":"k","в":"v","ф":"f","з":"z","с":"s","л":"l","м":"m","н":"n","р":"r"},apostrophesSingleKeyDict:{"'`‘’":""},substitutionForUndefinedResult:"",sortByMe:"2010Паспортнаpasport",isEssential:!0,isNotEssential_Unconventional:!1,isNotEssential_Fun:!1,isNotEssential_Minor:!1},temivka:{code:"temivka",name:"Темівка",year:2021,author:"Тем Шевченко",desc:'Концептуальний проєкт української латинки, оснований на тотожності функцій діакритичної крапки (для пом\'якшення) та умлаута (для йотування) над голосними: ı→i⇒ï, a→ȧ⇒ä, e→ė⇒ë, o→ȯ⇒ö, u→u̇⇒ü. Викристовується Темом Шевченком, автором "руховичка" цього транслітератора.',from:"ukr",to:"lat",affectVowelNotConsonantWhenSofting:!0,useLocationInWordAlgo:!1,beforeStartDict:{"йо":"'ё","ьо":"ё","дз":"ѕ","дж":"џ","ий":"y","ться":"ʦȧ","ТЬСЯ":"ТЬСЯ"},dict:{"и":"ı","і":"i","І":"İ","й":"j","я":"ä","є":"ë","ї":"ï","ю":"ü","ґ":"g","г":"h","х":"x","ц":"c","щ":"šč","ж":"ž","ш":"š","ч":"č","а":"a","е":"e","о":"o","у":"u","б":"b","п":"p","д":"d","т":"t","к":"k","в":"v","ф":"f","з":"z","с":"s","л":"l","м":"m","н":"n","р":"r"},otherLanguagesLettersDict:{"ё":"ö","ѕ":"dz","џ":"dž","ў":"w","э":"ɇ","ы":"ɏ","ъ":"ɉ"},apostrophesSingleKeyDict:{"'`‘’":""},specSymbolsDict:{"«":"„","»":"“","№":"#"},softingSignsMultiDict:{"ь":{affecting:"",affected:"j"}},softingVowelsMultiDict:{"є":"ė","ю":"u̇","я":"ȧ","ьо":"ȯ","ё":"ȯ"},softableConsonantsDict:{"д":"ď","з":"ź","л":"ľ","н":"ń","р":"ŕ","с":"ś","т":"ť","ц":"ć","ѕ":"dź"},unsoftableConsonants:["б","в","г","ґ","ж","к","м","п","ф","х","ч","џ","ш","щ"],afterFinishDict:{},substitutionForUndefinedResult:"*",sortByMe:"2021Темівкаtemivka",isEssential:!0,isNotEssential_Unconventional:!1,isNotEssential_Fun:!1,isNotEssential_Minor:!1},"nice-cyr":{code:"nice-cyr",name:"Гарна кирилиця",year:null,author:null,desc:"Для того, аби кирилічний текст виглядав гарно та незвично без використання додаткових шрифтів.",link:"",from:"ukr",to:"lat",dict:{"а":"ɑ","А":"Α","б":"δ","Б":"Б","в":"ɞ","В":"Β","г":"ƨ","Г":"Ƭ","ґ":"ґ","д":"∂","Д":"Ɗ","е":"ε","є":"є","ж":"ж","з":"ʒ","и":"u","И":"И","і":"ί","І":"İ","ї":"ϊ","й":"ŭ","Й":"Й","к":"κ","л":"ʌ","м":"ʍ","М":"M","н":"н","Н":"Η","о":"ο","п":"n","П":"Π","р":"ρ","с":"c","т":"m","Т":"Τ","у":"y","У":"У","ф":"ɸ","Ф":"Φ","х":"x","Х":"Ӽ","ц":"u̧","Ц":"Ա","ч":"ч","ш":"ɯ","щ":"ɰ","Щ":"Ɯ̧","ь":"ь","ю":"ю","я":"я"},otherLanguagesLettersDict:{"ё":"ε̈","ы":"ьι"},apostrophesSingleKeyDict:{"'`‘’":"’"},specSymbolsDict:{"«":"„","»":"“"},exceptionalCaseRules:{"ɰ":"Ɯ̧","ų":"Ա",x:"Ӽ","ɸ":"Φ",y:"У",m:"Τ",n:"Π","н":"Η","ʍ":"M","ŭ":"Й","ί":"İ",u:"И","ɡ":"Ɗ","г":"Ƭ","ɞ":"Β","δ":"Б","ɑ":"Α"},substitutionForUndefinedResult:"",sortByMe:"Гарна кирилицяnice-cyr",isEssential:!1,isNotEssential_Unconventional:!1,isNotEssential_Fun:!0,isNotEssential_Minor:!1},"volapuk-unicode":{code:"volapuk-unicode",name:"Кодування Воляпюк",year:null,desc:"На відміну від транслітерації, де символи замінюють так, аби вони однаково звучали, мета кодування Volapük – щоб символи виглядали максимально схожими. У цьому варіанті діакритика дозволяється.",from:"ukr",to:"lat",beforeStartDict:{},dict:{"а":"a","б":"6","в":"B","г":"r","Г":"Ƭ","ґ":"r'","Ґ":"r'","д":"g","Д":"Ɗ","е":"e","є":"€","ж":"}I{","з":"3","и":"u","И":"N","і":"i","ї":"ï","й":"ŭ","Й":"N̆","к":"k","л":"/\\","м":"M","н":"H","о":"o","п":"n","П":"TT","р":"p","с":"c","т":"m","Т":"T","у":"y","ф":"qp","Ф":"Ꝕ","х":"x","ц":"u,","ч":"4","ш":"w","щ":"w,","ь":"b","Ь":"b","ю":"IO","я":"R"},apostrophesSingleKeyDict:{"'`‘’":"’"},substitutionForUndefinedResult:"",sortByMe:"Кодування Воляпюкvolapuk-unicode",isEssential:!1,isNotEssential_Unconventional:!1,isNotEssential_Fun:!0,isNotEssential_Minor:!1},ipa:{code:"ipa",name:"Фонетична",year:null,author:null,desc:"Експерементальна транслітерація з використанням не лише латинських, а й символів міжнародного фонетичного алфавіту (IPA). Не слід сприймати як транскрипцію, адже в першу чергу ця транслітерація передає графіку. Також використовуються великі літери. Усі приголосні здатні до пом'якшення (навіть ті, що зазвичай пом'якшуються наполовину). Для спрощення м'якість передається апострофом замість символу «ʲ», а з'єднувальні перемички (наприклад, як у d͡ʒ) не використовуються.",link:"https://uk.wikipedia.org/wiki/%D0%A3%D0%BA%D1%80%D0%B0%D1%97%D0%BD%D1%81%D1%8C%D0%BA%D0%B0_%D1%84%D0%BE%D0%BD%D0%B5%D1%82%D0%B8%D0%BA%D0%B0",from:"ukr",to:"lat",affectVowelNotConsonantWhenSofting:!1,beforeStartDict:{},dict:{"и":"ı","і":"i","І":"İ","й":"j","я":"jɑ","є":"jɛ","ї":"ji","ю":"ju","ґ":"g","г":"ɦ","х":"x","ц":"ts","щ":"ʃtʃ","ж":"ʒ","ш":"ʃ","ч":"tʃ","а":"ɑ","е":"ɛ","о":"ɔ","у":"u","б":"b","п":"p","д":"d","т":"t","к":"k","в":"v","ф":"f","з":"z","с":"s","л":"l","м":"m","н":"n","р":"r"},otherLanguagesLettersDict:{"ѕ":"dz","џ":"dʒ","ў":"w"},apostrophesSingleKeyDict:{"'`‘’":""},softingSignsMultiDict:{"ь":{affecting:"",affected:"ʲ"}},softingVowelsMultiDict:{"є":{affecting:"ɛ",affected:"jɛ"},"ю":{affecting:"u",affected:"ju"},"я":{affecting:"ɑ",affected:"jɑ"},"ьо":{affecting:"ɔ",affected:"jɔ"}},softableConsonantsDict:{"д":"dʲ","з":"zʲ","л":"lʲ","н":"nʲ","р":"rʲ","с":"sʲ","т":"tʲ","ц":"tsʲ","б":"bʲ","в":"vʲ","г":"ɦʲ","ґ":"gʲ","ж":"ʒʲ","к":"kʲ","м":"mʲ","п":"pʲ","ф":"fʲ","х":"xʲ","ч":"tʃʲ","ш":"ʃʲ","щ":"ʃtʃʲ"},unsoftableConsonants:[],afterFinishDict:{"ʲ":"ʼ"},exceptionalCaseRules:{i:"İ"},substitutionForUndefinedResult:"",sortByMe:"Фонетичнаipa",isEssential:!1,isNotEssential_Unconventional:!0,isNotEssential_Fun:!1,isNotEssential_Minor:!1}};class DefaultConfigReaderFromGitHub{static#PROJECT_HOME_LINK="https://raw.githubusercontent.com/shevchenkoartem/t-literator-configs/master/";getConfigObject(t){if(null==t||!t.length)return{};let e=DefaultConfigReaderFromGitHub.#httpGet(DefaultConfigReaderFromGitHub.#PROJECT_HOME_LINK+`src/${t}.config`);return e=e.replace(/\/\*[\s\S]*?\*\/|([^\\:]|^)\/\/.*$/gm,"$1"),e=e.replace(/[\u202F\u00A0]/g," "),JSON.parse(e)}static#httpGet(t){const e="undefined"==typeof window?require("xmlhttprequest").XMLHttpRequest:XMLHttpRequest,i=new e;return i.open("GET",t,!1),i.send(null),i.responseText}}"undefined"==typeof window&&(module.exports=DefaultConfigReaderFromGitHub);class StringValueOrArrayHelpers{static toTitleCase(e){if(null==e)return null;if(Array.isArray(e)){const s=[...e];for(let t=0;t<s.length;++t)s[t]=StringValueOrArrayHelpers.toTitleCase(s[t]);return s}var i;for(let t=0;t<e.length;++t)if(null!=(i=e.charAt(t))&&i.toLowerCase()!==i.toUpperCase())return e.slice(0,t+1).toUpperCase()+e.slice(t+1);return e}static toUpperCase(t,e){if(null==t)return null;if(Array.isArray(t)){const n=[...t];for(let t=0;t<n.length;++t)n[t]=StringValueOrArrayHelpers.toUpperCase(n[t]);return n}let i=t;for(var[s,o]of Object.entries(e??{}))i=i.replaceAll(s,o);return i.toUpperCase()}static toDiacriticless(t){if(null==t)return null;if(Array.isArray(t)){const i=[...t];for(let t=0;t<i.length;++t)i[t]=StringValueOrArrayHelpers.toDiacriticless(i[t]);return i}var e={"ł":"l","Ł":"L","ı":"i","İ":"I"};return null!=e[t]?e[t]:t.normalize("NFD").replace(/\p{Diacritic}/gu,"")}}"undefined"==typeof window&&(module.exports=StringValueOrArrayHelpers);const Helpers="undefined"==typeof window?require("./string-value-or-array-helpers"):StringValueOrArrayHelpers,FromGitHubReader="undefined"==typeof window?require("./default-config-reader-from-github"):DefaultConfigReaderFromGitHub;class Transliterator{static#AFFECTING="affecting";static#AFFECTED="affected";#WORD_START="【⟨";#WORD_END="⟩】";static#UPPER_TECH_LETER="Ꙍ";static#LOWER_TECH_LETER="ꙍ";#config={};#implementingGetConfigObject;#useDiacritics=!0;constructor(t,e){this.#implementingGetConfigObject=null!=t?t:new FromGitHubReader,null!=e&&this.useConfig(e)}get config(){return{...this.#config}}transliterate(t,e){this.#useDiacritics=!e;var i,s,o,n,a=this.#useDiacritics?0:1;let r=t;this.#config.useLocationInWordAlgo&&(r=this.#markStartingPositions(r)),r=this.#replaceAllByDict(r,this.#config.beforeStartDict,this.#config.useLocationInWordAlgo);const l=Object.keys(this.#config.apostrophesSingleKeyDict)[0];for(const b of l.split(""))r=r.replaceAll(b,"⟨≀⟩");for([i,s]of Object.entries(this.#config.softingVowelsMultiDict)){for(const y of this.#config.unsoftableConsonants){var c,f=s[Transliterator.#AFFECTED];this.#config.useLocationInWordAlgo&&Array.isArray(f[a])&&(c=Transliterator.#getPositionalValue(f[a],2),r=r.replaceAll(y+i+this.#WORD_END,y+c+this.#WORD_END));f=Transliterator.#getPositionalValue(f[a]);r=r.replaceAll(y+i,y+f)}for(var[u,g]of Object.entries(this.#config.softableConsonantsDict)){g=this.#config.affectVowelNotConsonantWhenSofting?u:Transliterator.#getPositionalValue(g[a]);this.#config.useLocationInWordAlgo&&Array.isArray(s[Transliterator.#AFFECTING][a])&&(h=Transliterator.#getPositionalValue(s[Transliterator.#AFFECTING][a],2),r=r.replaceAll(u+i+this.#WORD_END,g+h+this.#WORD_END));var h=Transliterator.#getPositionalValue(s[Transliterator.#AFFECTING][a]);r=r.replaceAll(u+i,g+h)}}for([o,n]of Object.entries(this.#config.softingSignsMultiDict)){for(const A of this.#config.unsoftableConsonants)r=r.replaceAll(A+o,A+n[Transliterator.#AFFECTED][a]);for(var[p,d]of Object.entries(this.#config.softableConsonantsDict)){d=Transliterator.#getPositionalValue(d[a]);this.#config.useLocationInWordAlgo&&Array.isArray(n[Transliterator.#AFFECTING][a])&&(D=Transliterator.#getPositionalValue(n[Transliterator.#AFFECTING][a],2),r=r.replaceAll(p+o+this.#WORD_END,d+D+this.#WORD_END));var D=Transliterator.#getPositionalValue(n[Transliterator.#AFFECTING][a]);r=r.replaceAll(p+o,d+D)}r=r.replaceAll(o,n[Transliterator.#AFFECTED][a])}return r=r.replaceAll("⟨≀⟩",this.#config.apostrophesSingleKeyDict[l]),r=this.#replaceAllByDict(r,this.#config.dict,this.#config.useLocationInWordAlgo),r=this.#replaceAllByDict(r,this.#config.otherLanguagesLettersDict,this.#config.useLocationInWordAlgo),r=this.#replaceAllByDict(r,this.#config.specSymbolsDict,this.#config.useLocationInWordAlgo),this.#config.useLocationInWordAlgo&&(r=r.replaceAll(this.#WORD_START,""),r=r.replaceAll(this.#WORD_END,"")),r=this.#detectAndFixCapsLocked(r),r=this.#replaceAllByDict(r,this.#config.afterFinishDict,this.#config.useLocationInWordAlgo),null!=this.#config.substitutionForUndefinedResult&&(r=r.replaceAll("undefined",this.#config.substitutionForUndefinedResult)),r}useConfig(t){this.#config={...this.#implementingGetConfigObject.getConfigObject(t)},this.#ensureConfigCompleted()}getConfigTransliterationInfo(i,s){const o={};var n=this.getSourceAlphabet(!1,!1),t=this.#useDiacritics?0:1;const a=Object.keys(this.#config.softableConsonantsDict).find(t=>t.toLocaleUpperCase()===t),r=Object.keys(this.#config.softableConsonantsDict).find(t=>t.toLocaleLowerCase()===t),l=this.#config.unsoftableConsonants.find(t=>t.toLocaleUpperCase()===t),c=this.#config.unsoftableConsonants.find(t=>t.toLocaleLowerCase()===t);let f,u,g,h;null!=a&&null!=r&&(f=Transliterator.#getPositionalValue(this.#config.softableConsonantsDict[a][t],2),u=Transliterator.#getPositionalValue(this.#config.softableConsonantsDict[r][t],2)),null!=l&&null!=c&&(g=this.transliterate(l),h=this.transliterate(c));var p=Object.keys(this.#config.softingSignsMultiDict).find(t=>t.toLocaleUpperCase()===t),d=Object.keys(this.#config.softingSignsMultiDict).find(t=>t.toLocaleLowerCase()===t);let D,b;null!=p&&null!=d&&(D=Transliterator.#getPositionalValue(this.#config.softingSignsMultiDict[p][Transliterator.#AFFECTING][t],2),b=Transliterator.#getPositionalValue(this.#config.softingSignsMultiDict[d][Transliterator.#AFFECTING][t],2));const y=this.#getSourceVowels(!0);for(let t=0,e=1;t<n.length-1;t+=2,e+=2){var A=n[t],k=n[e];const N=[];if(Object.keys(this.#config.softingSignsMultiDict).includes(A)){const j=this.transliterate(a+A)+" "+this.transliterate(r+k);var C=j.replaceAll(f,"").replaceAll(u,"");N.push(C);const v=this.transliterate(l+A)+" "+this.transliterate(c+k);C=v.replaceAll(g,"").replaceAll(h,""),N.push(C)}else{var E,m=this.transliterate(A)+" "+this.transliterate(k);if(N.push(m),i||(E=(C=this.transliterate(Transliterator.#LOWER_TECH_LETER+k+Transliterator.#LOWER_TECH_LETER))+" "+C,C=(m=this.transliterate(Transliterator.#LOWER_TECH_LETER+k))+" "+m,E=(m=function(t){return t.replaceAll(Transliterator.#UPPER_TECH_LETER,"").replaceAll(Transliterator.#LOWER_TECH_LETER,"")})(E),N.push(E),E=m(C),N.push(E)),!s)if(y.includes(A)){const L=this;function S(t){return t.replaceAll(L.transliterate(a),"").replaceAll(L.transliterate(r),"").replaceAll(L.transliterate(l),"").replaceAll(L.transliterate(c),"")}this.#config.affectVowelNotConsonantWhenSofting&&null!=a&&null!=r&&(E=S((E=this.transliterate(r+k))+" "+E),N.push(E)),null!=l&&null!=c&&(T=S((T=this.transliterate(c+k))+" "+T),N.push(T))}else if(Object.keys(this.#config.softableConsonantsDict).includes(A)&&null!=p&&null!=d){const O=this.transliterate(A+p)+" "+this.transliterate(k+d);var T=O.replaceAll(D,"").replaceAll(b,"");N.push(T)}}o[A+" "+k]=N.filter((t,e,i)=>i.map(t=>t.split(" ").at(-1).toLocaleUpperCase()).indexOf(t.split(" ").at(-1).toLocaleUpperCase())===e).map(t=>t.length&&null!=t.match(/\S.*/)?t:"—").map(t=>function(t){const e=t.split(" ");if(2===e.length){var i=e[0]===e[1],s=1<Helpers.toDiacriticless(e[0]).length&&e[0]===e[1].toLocaleUpperCase();if(i||s)return e[1]}return t}(t)).join(", ")}const e=Object.values(o).join(", ");t=this.getTransliteratedAlphabet(!0).filter(t=>!e.includes(t)).join(", ");return t.length&&(o._others_=t),o}getSourceAlphabet(e,i){const s=[];for(const o of this.#config.unsoftableConsonants.concat(Object.keys(this.#config.softingSignsMultiDict)).concat(Object.keys(this.#config.dict)).concat(Object.keys(this.#config.softableConsonantsDict)).concat(Object.keys(this.#config.softingVowelsMultiDict)).concat(Object.keys(this.#config.beforeStartDict)).concat(i?Object.keys(this.#config.otherLanguagesLettersDict):[])){let t=o.length;if(1!==t){if(1<t)for(;t--;)s.push(e?o.charAt(t).toLowerCase():o.charAt(t))}else s.push(e?o.toLowerCase():o)}return s.filter((t,e,i)=>i.indexOf(t)===e).filter(t=>!!i||!Object.keys(this.#config.otherLanguagesLettersDict).includes(t)).sort(Transliterator.#alphabetOrderComparator)}getTransliteratedAlphabet(e,t){let i=[...this.#flatValuesAt(this.#config.beforeStartDict).map(t=>this.transliterate(t))];for(const a of this.#flatValuesAt(this.#config.dict).concat(this.#flatValuesAt(this.#config.apostrophesSingleKeyDict)).concat(this.#flatValuesAt(this.#config.softableConsonantsDict)).concat(this.#flatValuesAt(this.#config.softingVowelsMultiDict)).concat(this.#flatValuesAt(this.#config.softingSignsMultiDict)).concat(t?this.#flatValuesAt(this.#config.otherLanguagesLettersDict):[]))if(null!=a){let t=a;for(var[s,o]of Object.entries(this.#config.afterFinishDict))t=t.replaceAll(s,o);i.push(t)}i=i.concat(this.#flatValuesAt(this.#config.afterFinishDict));const n=[];for(const r of i)if(null!=r){let t=Helpers.toDiacriticless(r).length;if(1!==t){if(1<t)for(;t--;)n.push(e?r.charAt(t).toLowerCase():r.charAt(t))}else e&&r!==r.toLowerCase()||n.push(r)}return n.filter((t,e,i)=>i.indexOf(t)===e).sort(Transliterator.#alphabetOrderComparator)}#getDigraphs(){const t=[];for(const e of this.#flatValuesAt(this.#config.beforeStartDict).concat(this.#flatValuesAt(this.#config.dict)).concat(this.#flatValuesAt(this.#config.apostrophesSingleKeyDict)).concat(this.#flatValuesAt(this.#config.softableConsonantsDict)).concat(this.#flatValuesAt(this.#config.softingVowelsMultiDict)).concat(this.#flatValuesAt(this.#config.softingSignsMultiDict)).concat(this.#flatValuesAt(this.#config.otherLanguagesLettersDict)).concat(this.#flatValuesAt(this.#config.afterFinishDict)))null!=e&&1<e.length&&t.push(e.toLowerCase());return t.filter((t,e,i)=>i.indexOf(t)===e)}#ensureConfigCompleted(){this.#config.code=this.#config.code??"code"+Math.floor(1e3*Math.random()),this.#config.name=this.#config.name??"Unnamed",this.#config.desc=this.#config.desc??"",this.#config.link=this.#config.link??"",this.#config.from=this.#config.from??"",this.#config.to=this.#config.to??"",this.#config.exceptionalCaseRules=this.#config.exceptionalCaseRules??{},this.#config.affectVowelNotConsonantWhenSofting=this.#config.affectVowelNotConsonantWhenSofting??!1,this.#config.useLocationInWordAlgo=this.#config.useLocationInWordAlgo??!1,this.#config.unsoftableConsonants=this.#config.unsoftableConsonants??[],this.#config.softableConsonantsDict=Transliterator.#getNormalizedDictStructure(this.#config.softableConsonantsDict),this.#config.dict=Transliterator.#getNormalizedDictStructure(this.#config.dict),this.#config.otherLanguagesLettersDict=Transliterator.#getNormalizedDictStructure(this.#config.otherLanguagesLettersDict),this.#config.specSymbolsDict=Transliterator.#getNormalizedDictStructure(this.#config.specSymbolsDict),this.#config.beforeStartDict=Transliterator.#getNormalizedDictStructure(this.#config.beforeStartDict),this.#config.afterFinishDict=Transliterator.#getNormalizedDictStructure(this.#config.afterFinishDict),this.#config.softingSignsMultiDict=Transliterator.#getNormalizedMultiDictStructure(this.#config.softingSignsMultiDict),this.#config.softingVowelsMultiDict=Transliterator.#getNormalizedMultiDictStructure(this.#config.softingVowelsMultiDict),this.#normalizeApostrophesSingleKeyDict(),Transliterator.#completeByUpperAndTitleCased(this.#config.beforeStartDict),this.#useDiacritics||Transliterator.#completeByNonDiacritics(this.#config.beforeStartDict,!0);for(const t of[this.#config.unsoftableConsonants,this.#config.softableConsonantsDict,this.#config.dict,this.#config.otherLanguagesLettersDict,this.#config.softingSignsMultiDict,this.#config.softingVowelsMultiDict,this.#config.afterFinishDict])Transliterator.#completeByUpperAndTitleCased(t),this.#useDiacritics||Transliterator.#completeByNonDiacritics(t)}#markStartingPositions(t){var e=this.getSourceAlphabet(!1,!0).concat([Transliterator.#UPPER_TECH_LETER,Transliterator.#LOWER_TECH_LETER]).join(""),i=new RegExp(`(?<a>^|[^${e}]+)(?<b>[${e}])`,"gu");let s=t.replaceAll(i,`$<a>${this.#WORD_START}$<b>`);return i=new RegExp(`(?<b>[${e}])(?<c>$|[^${e}]+)`,"gu"),s=s.replaceAll(i,`$<b>${this.#WORD_END}$<c>`),i=new RegExp(`(?<a>${this.#WORD_END})(?<b>['\`‘’])(?<c>${this.#WORD_START})`,"gu"),s=s.replaceAll(i,"$<b>"),s}#detectAndFixCapsLocked(t,e){let i=t;e=e??2;const s={a:1,b:2,c:3,q:4,d:5},o=[...i.matchAll(/(?<a>\p{Lu}\p{Ll}+)(?<b>\p{Lu}+)|(?<c>\p{Lu}+)(?<q>['"]*)(?<d>\p{Lu}\p{Ll}+)/gu)];var n,a,r,t=o.map(t=>({probablyIssue:null!=t[s.a]?t[s.a]:t[s.d],after:null!=t[s.b]?t[s.b]:"",before:null!=t[s.c]?t[s.c]:"",specSymb2:null!=t[s.q]?t[s.q]:"",index:t.index}));const l=this.#getDigraphs();for(const c of t)l.includes(c.probablyIssue.toLowerCase())&&(i=(n=i,a=c.index,r=c.before+c.specSymb2+Helpers.toUpperCase(c.probablyIssue,this.#config.exceptionalCaseRules)+c.after,n.substr(0,a)+r+n.substr(a+r.length)));return 0===e?i:this.#detectAndFixCapsLocked(i,e-1)}#replaceAllByDict(t,e,i){var s,o,n=this.#useDiacritics?0:1;let a=t;for([s,o]of Object.entries(e)){var r=o[n];i&&Array.isArray(r)&&(a=a.replaceAll(this.#WORD_START+s,this.#WORD_START+Transliterator.#getPositionalValue(r,0)),a=a.replaceAll(s+this.#WORD_END,Transliterator.#getPositionalValue(r,2)+this.#WORD_END)),a=a.replaceAll(s,Transliterator.#getPositionalValue(r))}return a}#normalizeApostrophesSingleKeyDict(){let t;if(null!=this.#config.apostrophesSingleKeyDict&&(t=Object.keys(this.#config.apostrophesSingleKeyDict)),null!=t&&t.length){let e=0;t.forEach(t=>0==e++||delete this.#config.apostrophesSingleKeyDict[t])}else this.#config.apostrophesSingleKeyDict={"":""}}#flatValuesAt(t){const e=this.#useDiacritics?0:1;return Object.values(t).flatMap(t=>t.constructor===Object?this.#flatValuesAt(t):t[e])}#getSourceVowels(t){const e=["А","а","Е","е","Ё","ё","Є","є","И","и","І","і","Ї","ї","О","о","У","у","Ы","ы","Э","э","Ю","ю","Я","я"],i=this.getSourceAlphabet(!1,t);return i.filter(t=>e.includes(t))}#getSourceConsonants(t){const e=["Б","б","В","в","Г","г","Ґ","ґ","Д","д","Ѓ","ѓ","Ђ","ђ","Ж","ж","З","з","З́","з́","Ѕ","ѕ","Й","й","Ј","ј","К","к","Л","л","Љ","љ","М","м","Н","н","Њ","њ","П","п","Р","р","С","с","С́","с́","Т","т","Ћ","ћ","Ќ","ќ","Ў","ў","Ф","ф","Х","х","Ц","ц","Ч","ч","Џ","џ","Ш","ш","Щ","щ"],i=this.getSourceAlphabet(!1,t);return i.filter(t=>e.includes(t))}#getSourceSpecialSigns(t){const e=["Ъ","ъ","Ь","ь","'","’"],i=this.getSourceAlphabet(!1,t);return i.filter(t=>e.includes(t))}static#getNormalizedDictStructure(t){const e={};if(null==t)return e;for(const n of Object.keys(t)){var i=!Array.isArray(t[n]),s=Array.isArray(t[n])&&0===t[n].length,o=Array.isArray(t[n])&&3===t[n].length;e[n]=i||o?[t[n]]:s?[""]:t[n]}return e}static#getNormalizedMultiDictStructure(t){const e={};if(null==t)return e;for(const s of Object.keys(t))if(t[s].constructor!==Object){var i=t[s];const o={};o[Transliterator.#AFFECTED]=i,o[Transliterator.#AFFECTING]=i,e[s]=Transliterator.#getNormalizedDictStructure(o)}else e[s]=Transliterator.#getNormalizedDictStructure(t[s]);return e}static#getPositionalValue(t,e){return null==e&&(e=1),Array.isArray(t)?t.length>e?t[e]:t[t.length-1]:t}static#completeByNonDiacritics(t,e){if(t.constructor===Object)for(const i of Object.values(t))i.constructor!==Object?i.length&&(1===i.length?i.push(Helpers.toDiacriticless(i[0])):e||(i[1]=Helpers.toDiacriticless(i[1]))):Transliterator.#completeByNonDiacritics(i)}static#completeByUpperAndTitleCased(e){var t=[Helpers.toTitleCase,Helpers.toUpperCase];if(Array.isArray(e)){const l=[];for(const c of e)for(const f of t){var i=f(c);e.includes(i)||l.includes(i)||l.push(i)}l.forEach(t=>e.push(t))}else for(var[s,o]of Object.entries(e))for(const u of t){var n=u(s);if(!e.hasOwnProperty(n))if(Array.isArray(o)){const g=[];for(const h of o)g.push(u(h));e[n]=g}else{const p={};for(var[a,r]of Object.entries(o)){const d=[];for(const D of r)d.push(u(D));p[a]=d}e[n]=p}}}static#alphabetOrderComparator(t,e){var i="'’*";let s=1;(i.includes(t)&&!i.includes(e)||i.includes(e)&&!i.includes(t))&&(s=-1);for(const o of["AaȦȧÄä","EeĖėËë","IıİiÏï","OoȮȯÖö","UuU̇u̇Üü","YyẎẏŸÿ"])if(o.includes(t)||o.includes(e)){if(o.includes(t)&&o.includes(e))return o.indexOf(t).toString().localeCompare(o.indexOf(e).toString());if(o.includes(t)){t=o[0];break}e=o[0];break}return s*t.localeCompare(e,"uk",{caseFirst:"upper"})}}"undefined"==typeof window&&(module.exports=Transliterator);